#!/usr/bin/env ts-node

import * as fs from 'fs-extra'
import * as path from 'path'
import * as os from 'os'
// import * as cp from 'child_process'

import * as cli from 'mora-scripts/libs/tty/cli'
// import * as shell from 'mora-scripts/libs/tty/shell'
import * as error from 'mora-scripts/libs/sys/error'

const ROOT_DIR = __dirname

cli({
  usage: './script.ts [options] <command>'
})
.commands({
  jsontosass: {
    desc: '自动将 src/styles/xxx-config.json 转化成 src/styles/xxx-config.scss',
    cmd(res) {
      const dir = path.join(ROOT_DIR, 'src', 'styles')
      fs.readdirSync(dir)
        .filter(f => f.endsWith('.json') && f !== 'default-config.json')
        .map(f => path.join(dir, f))
        .forEach(f => {
          let content = require('./plugin/jsontosass/').jsonToSass(require(f))
          fs.writeFileSync(f.replace(/json$/, 'scss'), '/* Generated by command "./script.ts jsontosass" */\n\n' + content)
        })
    }
  },
  indexify: {
    desc: '插入一个 index 文件，导出当前目录下的所有模块',
    cmd(res) {
      if (!res._.length) return error('需要指定至少一个文件夹')
      res._.forEach(dir => {
        let content = []

        fs.readdirSync(dir)
          .filter(f => (f.endsWith('.tsx') || f.endsWith('.ts')) && f.charCodeAt(0) > 64 && f.charCodeAt(0) < 91) // A: 65, Z: 90
          .map(f => path.basename(f, path.extname(f)))
          .forEach(f => {
            content.push(`export * from './${f}'`)
          })
        fs.writeFileSync(path.join(dir, 'index.tsx'), content.join(os.EOL) + os.EOL)
      })
    }
  },
  __test: {
    desc: '临时用的测试脚本',
    cmd(res) {

    }
  }
})
.parse(function(res) {
  this.error('没有指定要执行的命令')
})

// function run(cmd: string, options: any = {stdio: 'inherit'}) {
//   return new Promise((resolve, reject) => {
//     let child: cp.ChildProcess = shell(cmd, options)
//     child.on('close', code => {
//       if (code === 0) {
//         resolve()
//       } else {
//         reject(code)
//       }
//     })
//   })
// }
